{"ast":null,"code":"var _jsxFileName = \"/Users/vamsimannava/Desktop/Senior Year/491/session2/491-Ryan-branch/frontend/src/BattleMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { io } from 'socket.io-client';\nimport Icon from './Icon';\nimport socket from './socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BattleMap = ({\n  mapImage,\n  icons,\n  setIcons\n}) => {\n  _s();\n  const room = window.location.pathname.split(\"/\").pop(); // sessionId from URL\n\n  const [, drop] = useDrop({\n    accept: 'ICON',\n    drop: (item, monitor) => {\n      const delta = monitor.getDifferenceFromInitialOffset();\n      if (!delta) return;\n      const newLeft = Math.round(item.left + delta.x);\n      const newTop = Math.round(item.top + delta.y);\n\n      // 1. Update local position\n      setIcons(prevIcons => prevIcons.map(icon => icon.id === item.id ? {\n        ...icon,\n        left: newLeft,\n        top: newTop\n      } : icon));\n\n      // 2. Emit icon move to others in room\n      socket.emit(\"moveIcon\", {\n        room,\n        iconId: item.id,\n        newPosition: {\n          left: newLeft,\n          top: newTop\n        }\n      });\n    }\n  });\n\n  // 3. Listen for incoming icon movement\n  useEffect(() => {\n    socket.on(\"iconMoved\", ({\n      iconId,\n      newPosition\n    }) => {\n      setIcons(prevIcons => prevIcons.map(icon => icon.id === iconId ? {\n        ...icon,\n        ...newPosition\n      } : icon));\n    });\n    return () => {\n      socket.off(\"iconMoved\");\n    };\n  }, [setIcons]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: {\n      position: 'relative',\n      width: '800px',\n      height: '600px',\n      backgroundSize: 'cover',\n      border: '6px solid transparent',\n      borderImage: 'linear-gradient(45deg, #999, #333) 1',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: mapImage,\n      alt: \"Battle Map\",\n      style: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), icons.map(icon => /*#__PURE__*/_jsxDEV(Icon, {\n      icon: icon\n    }, icon.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(BattleMap, \"MbYquUjgBVsbnBVfPKy+w3UK0kI=\", false, function () {\n  return [useDrop];\n});\n_c = BattleMap;\nexport default BattleMap;\nvar _c;\n$RefreshReg$(_c, \"BattleMap\");","map":{"version":3,"names":["React","useEffect","useDrop","io","Icon","socket","jsxDEV","_jsxDEV","BattleMap","mapImage","icons","setIcons","_s","room","window","location","pathname","split","pop","drop","accept","item","monitor","delta","getDifferenceFromInitialOffset","newLeft","Math","round","left","x","newTop","top","y","prevIcons","map","icon","id","emit","iconId","newPosition","on","off","ref","style","position","width","height","backgroundSize","border","borderImage","overflow","children","src","alt","objectFit","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vamsimannava/Desktop/Senior Year/491/session2/491-Ryan-branch/frontend/src/BattleMap.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { io } from 'socket.io-client';\r\nimport Icon from './Icon';\r\nimport socket from './socket';\r\n\r\n\r\n\r\n\r\nconst BattleMap = ({ mapImage, icons, setIcons }) => {\r\n  const room = window.location.pathname.split(\"/\").pop(); // sessionId from URL\r\n\r\n  const [, drop] = useDrop({\r\n    accept: 'ICON',\r\n    drop: (item, monitor) => {\r\n      const delta = monitor.getDifferenceFromInitialOffset();\r\n      if (!delta) return;\r\n\r\n      const newLeft = Math.round(item.left + delta.x);\r\n      const newTop = Math.round(item.top + delta.y);\r\n\r\n      // 1. Update local position\r\n      setIcons(prevIcons =>\r\n        prevIcons.map(icon =>\r\n          icon.id === item.id ? { ...icon, left: newLeft, top: newTop } : icon\r\n        )\r\n      );\r\n\r\n      // 2. Emit icon move to others in room\r\n      socket.emit(\"moveIcon\", {\r\n        room,\r\n        iconId: item.id,\r\n        newPosition: { left: newLeft, top: newTop }\r\n      });\r\n    },\r\n  });\r\n\r\n  // 3. Listen for incoming icon movement\r\n  useEffect(() => {\r\n    socket.on(\"iconMoved\", ({ iconId, newPosition }) => {\r\n      setIcons(prevIcons =>\r\n        prevIcons.map(icon =>\r\n          icon.id === iconId ? { ...icon, ...newPosition } : icon\r\n        )\r\n      );\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"iconMoved\");\r\n    };\r\n  }, [setIcons]);\r\n\r\n  return (\r\n    <div\r\n      ref={drop}\r\n      style={{\r\n        position: 'relative',\r\n        width: '800px',\r\n        height: '600px',\r\n        backgroundSize: 'cover',\r\n        border: '6px solid transparent',\r\n        borderImage: 'linear-gradient(45deg, #999, #333) 1',\r\n        overflow: 'hidden',\r\n      }}\r\n    >\r\n      <img\r\n        src={mapImage}\r\n        alt=\"Battle Map\"\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n          objectFit: 'cover',\r\n          display: 'block',\r\n        }}\r\n      />\r\n      {icons.map(icon => (\r\n        <Icon key={icon.id} icon={icon} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BattleMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}