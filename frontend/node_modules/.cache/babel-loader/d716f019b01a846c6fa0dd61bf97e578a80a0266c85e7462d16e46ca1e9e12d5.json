{"ast":null,"code":"// src/index.js\nimport React from'react';import ReactDOM from'react-dom/client';import{BrowserRouter,Routes,Route}from'react-router-dom';import App from'./App';// Your battlemap + chat UI\nimport'./index.css';// Optional: global styles\nimport{jsx as _jsx}from\"react/jsx-runtime\";const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsx(Route,{path:\"/session/:sessionId\",element:/*#__PURE__*/_jsx(App,{})})})})}));","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","Routes","Route","App","jsx","_jsx","root","createRoot","document","getElementById","render","StrictMode","children","path","element"],"sources":["/Users/vamsimannava/Desktop/Senior Year/491/session2/491-Ryan-branch/frontend/src/index.js"],"sourcesContent":["// src/index.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport App from './App'; // Your battlemap + chat UI\nimport './index.css';    // Optional: global styles\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        {/* Only mount React when session is active */}\n        <Route path=\"/session/:sessionId\" element={<App />} />\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,OAASC,aAAa,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CAC/D,MAAO,CAAAC,GAAG,KAAM,OAAO,CAAE;AACzB,MAAO,aAAa,CAAK;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEzB,KAAM,CAAAC,IAAI,CAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAEjEH,IAAI,CAACI,MAAM,cACTL,IAAA,CAACP,KAAK,CAACa,UAAU,EAAAC,QAAA,cACfP,IAAA,CAACL,aAAa,EAAAY,QAAA,cACZP,IAAA,CAACJ,MAAM,EAAAW,QAAA,cAELP,IAAA,CAACH,KAAK,EAACW,IAAI,CAAC,qBAAqB,CAACC,OAAO,cAAET,IAAA,CAACF,GAAG,GAAE,CAAE,CAAE,CAAC,CAChD,CAAC,CACI,CAAC,CACA,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}