{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\OneDrive\\\\Desktop\\\\491-Ryan-branch\\\\frontend\\\\src\\\\BattleMap.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDrop } from 'react-dnd';\nimport Icon from './Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BattleMap = ({\n  mapImage,\n  icons,\n  setIcons\n}) => {\n  _s();\n  //contains the map image and icons for movement\n  const [, drop] = useDrop({\n    accept: 'ICON',\n    drop: (item, monitor) => {\n      const delta = monitor.getDifferenceFromInitialOffset(); // math used for moving the icon on the map\n      if (!delta) return;\n      const newLeft = Math.round(item.left + delta.x);\n      const newTop = Math.round(item.top + delta.y);\n      setIcons(prevIcons =>\n      //update icons state with new position\n      prevIcons.map(icon => icon.id === item.id ? {\n        ...icon,\n        left: newLeft,\n        top: newTop\n      } : icon));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop //This is used for the drop ref\n    ,\n    style: {\n      position: 'relative',\n      width: '800px',\n      height: '600px',\n      backgroundSize: 'cover',\n      border: '6px solid transparent',\n      borderImage: 'linear-gradient(45deg, #999, #333) 1',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      //display battle map image\n      src: mapImage,\n      alt: \"Battle Map\",\n      style: {\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover',\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), icons.map(icon =>\n    /*#__PURE__*/\n    //rendering icons\n    _jsxDEV(Icon, {\n      icon: icon\n    }, icon.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(BattleMap, \"hdmCamxlwL9WeSdzgzIVyaE48AI=\", false, function () {\n  return [useDrop];\n});\n_c = BattleMap;\nexport default BattleMap;\nvar _c;\n$RefreshReg$(_c, \"BattleMap\");","map":{"version":3,"names":["React","useDrop","Icon","jsxDEV","_jsxDEV","BattleMap","mapImage","icons","setIcons","_s","drop","accept","item","monitor","delta","getDifferenceFromInitialOffset","newLeft","Math","round","left","x","newTop","top","y","prevIcons","map","icon","id","ref","style","position","width","height","backgroundSize","border","borderImage","overflow","children","src","alt","objectFit","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ryan/OneDrive/Desktop/491-Ryan-branch/frontend/src/BattleMap.js"],"sourcesContent":["import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport Icon from './Icon';\r\n\r\nconst BattleMap = ({ mapImage, icons, setIcons }) => {  //contains the map image and icons for movement\r\n  const [, drop] = useDrop({\r\n    accept: 'ICON',\r\n    drop: (item, monitor) => {\r\n      const delta = monitor.getDifferenceFromInitialOffset(); // math used for moving the icon on the map\r\n      if (!delta) return;\r\n      const newLeft = Math.round(item.left + delta.x);\r\n      const newTop = Math.round(item.top + delta.y);\r\n      \r\n      setIcons(prevIcons =>                                 //update icons state with new position\r\n        prevIcons.map(icon =>\r\n          icon.id === item.id\r\n            ? { ...icon, left: newLeft, top: newTop }\r\n            : icon\r\n        )\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={drop} //This is used for the drop ref\r\n      style={{\r\n        position: 'relative',\r\n        width: '800px',\r\n        height: '600px',\r\n        backgroundSize: 'cover',\r\n        border: '6px solid transparent',\r\n        borderImage: 'linear-gradient(45deg, #999, #333) 1',\r\n        overflow: 'hidden',\r\n      }}\r\n    >\r\n      <img           //display battle map image\r\n        src={mapImage}\r\n        alt=\"Battle Map\"\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n          objectFit: 'cover',\r\n          display: 'block',\r\n        }}\r\n      />\r\n      {icons.map(icon => (         //rendering icons\r\n        <Icon key={icon.id} icon={icon} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BattleMap;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAAG;EACtD,MAAM,GAAGC,IAAI,CAAC,GAAGT,OAAO,CAAC;IACvBU,MAAM,EAAE,MAAM;IACdD,IAAI,EAAEA,CAACE,IAAI,EAAEC,OAAO,KAAK;MACvB,MAAMC,KAAK,GAAGD,OAAO,CAACE,8BAA8B,CAAC,CAAC,CAAC,CAAC;MACxD,IAAI,CAACD,KAAK,EAAE;MACZ,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACN,IAAI,CAACO,IAAI,GAAGL,KAAK,CAACM,CAAC,CAAC;MAC/C,MAAMC,MAAM,GAAGJ,IAAI,CAACC,KAAK,CAACN,IAAI,CAACU,GAAG,GAAGR,KAAK,CAACS,CAAC,CAAC;MAE7Cf,QAAQ,CAACgB,SAAS;MAAoC;MACpDA,SAAS,CAACC,GAAG,CAACC,IAAI,IAChBA,IAAI,CAACC,EAAE,KAAKf,IAAI,CAACe,EAAE,GACf;QAAE,GAAGD,IAAI;QAAEP,IAAI,EAAEH,OAAO;QAAEM,GAAG,EAAED;MAAO,CAAC,GACvCK,IACN,CACF,CAAC;IACH;EACF,CAAC,CAAC;EAEF,oBACEtB,OAAA;IACEwB,GAAG,EAAElB,IAAK,CAAC;IAAA;IACXmB,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MACpBC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,OAAO;MACfC,cAAc,EAAE,OAAO;MACvBC,MAAM,EAAE,uBAAuB;MAC/BC,WAAW,EAAE,sCAAsC;MACnDC,QAAQ,EAAE;IACZ,CAAE;IAAAC,QAAA,gBAEFjC,OAAA;MAAe;MACbkC,GAAG,EAAEhC,QAAS;MACdiC,GAAG,EAAC,YAAY;MAChBV,KAAK,EAAE;QACLE,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdQ,SAAS,EAAE,OAAO;QAClBC,OAAO,EAAE;MACX;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACDtC,KAAK,CAACkB,GAAG,CAACC,IAAI;IAAA;IAAc;IAC3BtB,OAAA,CAACF,IAAI;MAAewB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpC,EAAA,CA/CIJ,SAAS;EAAA,QACIJ,OAAO;AAAA;AAAA6C,EAAA,GADpBzC,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}